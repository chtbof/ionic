
=================================================
(1)資料庫 mydb.sql
=================================================

SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for `scenery`
-- ----------------------------
DROP TABLE IF EXISTS `scenery`;
CREATE TABLE `scenery` (
  `serNo` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `description` text COLLATE utf8_unicode_ci,
  `telephone` varchar(20) COLLATE utf8_unicode_ci DEFAULT NULL,
  `address` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `latitude` double DEFAULT NULL,
  `longtitude` double DEFAULT NULL,
  `smallPicture` varchar(50) COLLATE utf8_unicode_ci DEFAULT NULL,
  `IlargePicture` varchar(50) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`serNo`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of scenery
-- ----------------------------
INSERT INTO `scenery` VALUES ('1', '舊金山總督溫泉有限公司', '原名舊金山總督溫泉會館，舊金山總督溫泉的名稱由來，是附近有一座舊的金山海水浴場，加上這裡為日據時期的臺灣總督府（臺北州於昭和13年5月，撥款3萬日元興建。於昭和14年9月竣工，因而命名為「舊金山總督溫泉」）。光復後，國軍以此處為海防要塞，泉源遂廢。軍隊移防後，建物頃廢。直至舊金山總督溫泉團隊投入整建，以原建物為藍圖，盡心竭力尋找舊風格建材，完工後既有新的服務功能，又難得的維護舊建物風格，賦予「新館」溫泉新的生命力。 本館溫泉泉水屬於稀有的海底溫泉，除了含有大屯火山山脈特有的硫磺及礦物成份外(沒有濃濃的硫磺味)，因緊鄰海岸，本館溫泉在形成的同時，亦滲透到深層潔淨的海水，因此水中有著淡淡的鹹味，讓人浸泡其中感到無比的清爽舒暢。', '886-2-24082628', '新北市金山區民生路196號', '25.222000122070312', '121.64600372314453', '1a.jpg', '1b.jpg');
INSERT INTO `scenery` VALUES ('2', '巨龍山莊', '依偎在洪荒峽畔的巨龍山莊，建築以紅磚牆砌成，充滿古色古香，且是一家以茶餚主題的餐廳，除以茶餚聞名外，「水世界」溫泉館也頗具知名，大浴池分有捶背、噴絲、單孔、氣泡等各式按摩設備，可享受按摩樂趣。仕女區半露天池，可以邊泡湯邊欣賞洪荒峽畔巨岩嶙峋的景緻；男仕養生池的半露天湯則是欣賞到堰堤水壩的景觀。', '886-2-26616333', '新北市烏來區新烏路5段60號', '24.871999740600586', '121.5469970703125', '2a.jpg', '2b.jpg');
INSERT INTO `scenery` VALUES ('3', '國際岩湯', '國際岩湯採中國式庭園造景，家庭池則採觀音石建材，整體建築規劃及傢具擺設均呈現古樸氣息，大眾池亦提供完善設備，烤箱、氣泡池、冥想池、按摩池、衝擊水柱、蒸汽浴等。『岩湯』集大地之精華孕育而生，含有豐富的天然礦物質，浸泡後感覺神清氣爽精力充沛即保健又養生，另提供以健康為訴求的餐飲，推出低鹽、低脂、低油的低卡路里營養餐，是大台北地區享受泡湯、美食的好地方。', '886-2-26616351', '新北市烏來區烏來街22號', '24.86400032043457', '121.5510025024414', '3a.jpg', '3b.jpg');
INSERT INTO `scenery` VALUES ('4', '小川源溫泉館', '成立於1997年，烏來第一家標準溫泉浴場，致力於「讓客戶正確使用溫泉與提供最好的水質」為宗旨，提升溫泉文化、正確使用溫泉，並供應100%純原汁的溫泉，再以專業設備，降溫至適合人體使用，絕不添加一滴山泉水或自來水冷卻，浸泡後效果更佳。使用最純最道地的烏來溫泉，因此內行人莫不趨之若鶩！泡溫泉需建立觀念『要有閒養生，不要有錢看醫生』這是泡溫泉的根本之源。文明病充斥的今日，健身養生有多元的方式，需持之以恆，泡溫泉也需如此。負責人洪榮川先生希望各位客戶能感受到溫泉水質的重要，所以小川源溫泉和玩樂遊憩溫泉、玩水是不同的，每位客戶能來到小川源溫泉能夠大量流汗如同運動般，這樣才不失泡溫泉的目的。', '886-2-26616222', '新北市烏來區烏來街32號', '24.863000869750977', '121.5510025024414', '4a.jpg', '4b.jpg');
INSERT INTO `scenery` VALUES ('5', '奇峰石溫泉山莊', '奇峰石溫泉山莊位於陽金公路4公里處，自民國80年營業至今，是個不論晴雨晨昏、四季皆宜、老少咸宜的好去處！奇峰石溫泉，獲頒「溫泉標章」認證，隸屬大屯山火山群地熱帶，泉水呈弱酸性反應，水質呈灰白色半透明，帶有硫磺味，介於40℃至75℃的中溫溫泉，不能飲用，屬於天然的白硫磺泉（酸性硫酸鹽泉），又名牛奶美人湯，適合大人小孩養生浸浴。冷泉為陽明山天然山泉水，水溫終年20°C以下，水質純淨甘美，無污染。有大眾裸湯池和私人湯屋池可供顧客選擇；本山莊絕不回收溫泉水，且經新北市政府衛生局水質檢驗合格。', '886-2-24080829', '新北市金山區林口28-3號', '25.208999633789062', '121.59700012207031', '5a.jpg', '5b.jpg');
INSERT INTO `scenery` VALUES ('6', '香草花源溫泉養生館', '地中海風情的主題會館，藍天白牆和湛藍的水連天，心嚮往的地中海就在萬里的香草花源溫泉養生館。我們有峇里島風格的熱水SPA、地中海風情的冷水泳池、兒童戲水區、和風溫泉、歐洲露天的熱水SPA芳香療池、高低溫烤箱具備數種功能的蒸氣室。慵懶的陽光照著GLASS HOUSE，徐徐的微風吹拂著你我，讓我們洗滌您心靈的塵囂。', '886-2-24987733', '新北市萬里區萬里加投18之4號', '25.211000442504883', '121.64800262451172', '6a.jpg', '6b.jpg');
INSERT INTO `scenery` VALUES ('7', '阿湯哥溫泉', '烏來為原住民山區，主要以泰雅族為主，處處可見泰雅族文化圖騰，且以溫泉與山櫻花聞名每逢春天形成落櫻繽紛的燦爛世界，且桶後溪及南勢溪可為旅客消暑，溪中有溪哥魚、苦花魚、溪蝦等。烏來區境內之自然植物、天然瀑布溪流，漫步於情人步道及森林步道中，享受大自然之芬多精，可謂人生一大享受。本館位於烏來溫泉街上，竭誠歡迎各方遠道而來的遊客至本館泡湯休憩。', '886-2-26616307', '新北市烏來區溫泉街75號', '24.860000610351562', '121.5510025024414', '7a.jpg', '7b.jpg');
INSERT INTO `scenery` VALUES ('8', '伊豆商店', '溫泉成分及泉質類別：碳酸氫鹽泉', '886-2-26616620', '新北市烏來區溫泉街72號', '24.86199951171875', '121.55000305175781', '8a.jpg', '8b.jpg');
INSERT INTO `scenery` VALUES ('9', '永和樂華夜市', '有卅年攸久歷史的永和樂華夜市，是雙和地區首屈一指的知名夜市，地處永和區中心交通便捷的永平路，不算長的一條街匯集了上百家的小吃攤及成衣店，入夜之後燈火通明有如白晝，絕對可以同時滿足都市人空乏的胃與寂寥的心。距離永和路入口處不遠左手邊的樂華蚵仔煎算是特色之一，歷經兩代的考驗，第二代三兄妹仍能攜手承接父親衣缽，繼續這個小吃的不朽傳奇。蚵仔煎的特別之處，除了精選新鮮的蚵仔，以細嫩的空心菜取代一般蚵仔煎慣用的茼蒿或小白菜，口感更是一絕。此外，這裡的豬血湯採用特調的沙茶調味，不但鮮而不腥，豬血嫩如豆腐的質感，也令人回味無窮。如果你覺得市面上連鎖經營的鍋貼專賣店已算令你稱道，那你一定沒吃過樂華夜市的鍋貼。店中雖然只賣鍋貼及酸辣湯兩樣東西，卻讓老闆從早忙到晚，每天平均賣出上萬個鍋貼，教店中人手個個人仰馬翻。走進店中只見四個大型生鐵平底鍋一字排開，一次可煎製四百個鍋貼，香味撲鼻，聞香不來也難。', '886-2-29282828', '新北市永和區永平路', '25.010000228881836', '121.50900268554688', '9a.jpg', '9b.jpg');
INSERT INTO `scenery` VALUES ('10', '樹林夜市', '說起樹林夜市的發展源起，得歸功於「有拜有保佑」的地方廟宇─濟安宮。當初因各地慕名到樹林濟安宮朝拜的香客絡繹不絕，才造就了保安街、博愛街、溪北路一帶市集的繁榮。只不過隨著樹林日漸朝向都市型城鎮發展，樹林夜市也轉型為綜合型的夜市，白天當地是現代新穎的商店街當道，到了下午四時以後，小吃攤才開始悄悄地現身，一場令人聞香下馬的喧鬧，一直要持續到午夜十二時灰姑娘的魔法消失為止。與板橋南雅、三重三和或新莊夜市比較起來，樹林夜市的小吃攤不以「量」取勝，花樣及選擇性也不是那麼多，但因有位在樹林火車站旁的地利之便，入夜之後，樹林夜市仍吸引大批晝伏夜出的食客，從四面八方而來，為的不僅僅是填飽肚子，更可感受在人群中呼吸的踏實感。', '886-2-26812106', '新北市樹林區博愛街', '24.98900032043457', '121.42400360107422', '10a.jpg', '10b.jpg');





=================================================
(2)網站
express myWeb -ejs
cd myWeb
npm install
npm install mysql --save
=================================================

=================================================
(2-1)網站 app.js
=================================================
var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');

var index = require('./routes/index');
var users = require('./routes/users');

var app = express();

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

//------------------------------
app.set('json spaces', 4);
//------------------------------

// uncomment after placing your favicon in /public
//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

app.use('/', index);
app.use('/users', users);

// catch 404 and forward to error handler
app.use(function(req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;




=================================================
(2-2)db.js
=================================================
var mysql = require('mysql');

//------------------------
// 建立資料庫連線池
//------------------------
var pool  = mysql.createPool({
    user: 'root',
    password: 'mysql',
    host: '127.0.0.1',
    database: 'mydb', 
    waitForConnections : true, 
    connectionLimit : 10       
});

//----------------------------
// 引用此模組時將匯出pool物件
//----------------------------
module.exports = pool;




=================================================
(2-3)index.js
=================================================
var express = require('express');
var router = express.Router();

//----------------------------------------------------
// 透過require引用db.js的pool物件,
// 即使多個程式均引用, 在系統中只有一份pool物件.
//----------------------------------------------------
var pool = require('./lib/db.js');


//----------------
// GET請求
//----------------
router.get('/', function(req, res, next) {	
    var now=new Date();
    console.log('----------------------------');
    console.log('fetchData.js(get):' + now);
    sendData(res);
});


//----------------
// POST請求
//----------------
router.post('/', function(req, res, next) {	
    var now=new Date();
    console.log('----------------------------');
    console.log('fetchData.js(post):' + now); 
    sendData(res);
});


//--------------------
// 回傳JSON資料
//--------------------
function sendData(res){
    pool.query('select * from scenery', function (error, results, fields) {
        //回傳資料(初值為空陣列)
        var data=[];
		
        if (error){			
            res.send(JSON.stringify(data));
        }else{			
            //逐筆取出資料, 加入data陣列中
            for(var i=0; i<results.length; i++){
                //========================================			
                //取出欄位資料
                //========================================				
                var name=results[i].name;
                var description=results[i].description;	
                var address=results[i].address;							

                //========================================				
                //將資料加入物件中
                //========================================				
                var item={};
                item.name=name;
                item.description=description;
                item.address=address;
				
                //將存有資料的物件加入陣列
                data.push(item);
            }	
			
            //將陣列轉為JSON格式字串, 回傳給呼叫者
            res.json(data);
        }       
    });
}

module.exports = router;




===============================================================================
(3)手機
ionic start myApp blank
cd myApp
ionic serve -l

(3)瀏覽器
如在Chrome中執行模擬器, 先安裝Chrome Extension: Allow-Control-Allow_Origin
===============================================================================

=================================================
(3-1)手機 app.module.js (加入2處)
=================================================
import { BrowserModule } from '@angular/platform-browser';
import { ErrorHandler, NgModule } from '@angular/core';
import { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';
import { SplashScreen } from '@ionic-native/splash-screen';
import { StatusBar } from '@ionic-native/status-bar';

import { MyApp } from './app.component';
import { HomePage } from '../pages/home/home';
//------------------------------------------------
import { HttpModule } from '@angular/http';
//------------------------------------------------

@NgModule({
  declarations: [
    MyApp,
    HomePage
  ],
  imports: [
    BrowserModule,
    HttpModule,    /* 增加匯入 */
    IonicModule.forRoot(MyApp)
  ],
  bootstrap: [IonicApp],
  entryComponents: [
    MyApp,
    HomePage
  ],
  providers: [
    StatusBar,
    SplashScreen,
    {provide: ErrorHandler, useClass: IonicErrorHandler}
  ]
})
export class AppModule {}




=================================================
(3-2)手機 home.ts
=================================================
import { Component } from '@angular/core';
import { NavController } from 'ionic-angular';
//---------------------------------------
import { Http } from '@angular/http';
//---------------------------------------

@Component({
  selector: 'page-home',
  templateUrl: 'home.html'
})
export class HomePage {
    //---------------------------------  
    items:any;
	
    //---------------------------------
    constructor(public navCtrl: NavController, public http:Http) {
        this.http.get('http://192.168.56.1:3000')			
            .subscribe(response => {
                this.items=response.json();
            });			
    }
    //---------------------------------    
}




=================================================
(3-3)手機 home.html
=================================================
<ion-header>
  <ion-navbar>
    <ion-title>
      Ionic Blank
    </ion-title>
  </ion-navbar>
</ion-header>

<ion-content padding>
  <!-- ------------------------------------ -->
  <ion-list>
    <ion-item *ngFor='let item of items'>
      <ion-thumbnail item-start>
        <img src="img/thumbnail-totoro.png">
      </ion-thumbnail>
      <h2>{{item.name}}</h2>
      <p>{{item.address}}</p>
      <button ion-button clear item-end>View</button>
    </ion-item>
  </ion-list>
  <!-- ------------------------------------- -->
</ion-content>


