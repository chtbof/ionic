
=================================================
(1)資料庫 mydb.sql
=================================================

SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for `scenery`
-- ----------------------------
DROP TABLE IF EXISTS `scenery`;
CREATE TABLE `scenery` (
  `serNo` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `description` text COLLATE utf8_unicode_ci,
  `telephone` varchar(20) COLLATE utf8_unicode_ci DEFAULT NULL,
  `address` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `latitude` double DEFAULT NULL,
  `longitude` double DEFAULT NULL,
  `smallPicture` varchar(50) COLLATE utf8_unicode_ci DEFAULT NULL,
  `largePicture` varchar(50) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`serNo`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of scenery
-- ----------------------------
INSERT INTO `scenery` VALUES ('1', '舊金山總督溫泉有限公司', '原名舊金山總督溫泉會館，舊金山總督溫泉的名稱由來，是附近有一座舊的金山海水浴場，加上這裡為日據時期的臺灣總督府（臺北州於昭和13年5月，撥款3萬日元興建。於昭和14年9月竣工，因而命名為「舊金山總督溫泉」）。光復後，國軍以此處為海防要塞，泉源遂廢。軍隊移防後，建物頃廢。直至舊金山總督溫泉團隊投入整建，以原建物為藍圖，盡心竭力尋找舊風格建材，完工後既有新的服務功能，又難得的維護舊建物風格，賦予「新館」溫泉新的生命力。 本館溫泉泉水屬於稀有的海底溫泉，除了含有大屯火山山脈特有的硫磺及礦物成份外(沒有濃濃的硫磺味)，因緊鄰海岸，本館溫泉在形成的同時，亦滲透到深層潔淨的海水，因此水中有著淡淡的鹹味，讓人浸泡其中感到無比的清爽舒暢。', '886-2-24082628', '新北市金山區民生路196號', '25.222000122070312', '121.64600372314453', '1a.jpg', '1b.jpg');
INSERT INTO `scenery` VALUES ('2', '巨龍山莊', '依偎在洪荒峽畔的巨龍山莊，建築以紅磚牆砌成，充滿古色古香，且是一家以茶餚主題的餐廳，除以茶餚聞名外，「水世界」溫泉館也頗具知名，大浴池分有捶背、噴絲、單孔、氣泡等各式按摩設備，可享受按摩樂趣。仕女區半露天池，可以邊泡湯邊欣賞洪荒峽畔巨岩嶙峋的景緻；男仕養生池的半露天湯則是欣賞到堰堤水壩的景觀。', '886-2-26616333', '新北市烏來區新烏路5段60號', '24.871999740600586', '121.5469970703125', '2a.jpg', '2b.jpg');
INSERT INTO `scenery` VALUES ('3', '國際岩湯', '國際岩湯採中國式庭園造景，家庭池則採觀音石建材，整體建築規劃及傢具擺設均呈現古樸氣息，大眾池亦提供完善設備，烤箱、氣泡池、冥想池、按摩池、衝擊水柱、蒸汽浴等。『岩湯』集大地之精華孕育而生，含有豐富的天然礦物質，浸泡後感覺神清氣爽精力充沛即保健又養生，另提供以健康為訴求的餐飲，推出低鹽、低脂、低油的低卡路里營養餐，是大台北地區享受泡湯、美食的好地方。', '886-2-26616351', '新北市烏來區烏來街22號', '24.86400032043457', '121.5510025024414', '3a.jpg', '3b.jpg');
INSERT INTO `scenery` VALUES ('4', '小川源溫泉館', '成立於1997年，烏來第一家標準溫泉浴場，致力於「讓客戶正確使用溫泉與提供最好的水質」為宗旨，提升溫泉文化、正確使用溫泉，並供應100%純原汁的溫泉，再以專業設備，降溫至適合人體使用，絕不添加一滴山泉水或自來水冷卻，浸泡後效果更佳。使用最純最道地的烏來溫泉，因此內行人莫不趨之若鶩！泡溫泉需建立觀念『要有閒養生，不要有錢看醫生』這是泡溫泉的根本之源。文明病充斥的今日，健身養生有多元的方式，需持之以恆，泡溫泉也需如此。負責人洪榮川先生希望各位客戶能感受到溫泉水質的重要，所以小川源溫泉和玩樂遊憩溫泉、玩水是不同的，每位客戶能來到小川源溫泉能夠大量流汗如同運動般，這樣才不失泡溫泉的目的。', '886-2-26616222', '新北市烏來區烏來街32號', '24.863000869750977', '121.5510025024414', '4a.jpg', '4b.jpg');
INSERT INTO `scenery` VALUES ('5', '奇峰石溫泉山莊', '奇峰石溫泉山莊位於陽金公路4公里處，自民國80年營業至今，是個不論晴雨晨昏、四季皆宜、老少咸宜的好去處！奇峰石溫泉，獲頒「溫泉標章」認證，隸屬大屯山火山群地熱帶，泉水呈弱酸性反應，水質呈灰白色半透明，帶有硫磺味，介於40℃至75℃的中溫溫泉，不能飲用，屬於天然的白硫磺泉（酸性硫酸鹽泉），又名牛奶美人湯，適合大人小孩養生浸浴。冷泉為陽明山天然山泉水，水溫終年20°C以下，水質純淨甘美，無污染。有大眾裸湯池和私人湯屋池可供顧客選擇；本山莊絕不回收溫泉水，且經新北市政府衛生局水質檢驗合格。', '886-2-24080829', '新北市金山區林口28-3號', '25.208999633789062', '121.59700012207031', '5a.jpg', '5b.jpg');
INSERT INTO `scenery` VALUES ('6', '香草花源溫泉養生館', '地中海風情的主題會館，藍天白牆和湛藍的水連天，心嚮往的地中海就在萬里的香草花源溫泉養生館。我們有峇里島風格的熱水SPA、地中海風情的冷水泳池、兒童戲水區、和風溫泉、歐洲露天的熱水SPA芳香療池、高低溫烤箱具備數種功能的蒸氣室。慵懶的陽光照著GLASS HOUSE，徐徐的微風吹拂著你我，讓我們洗滌您心靈的塵囂。', '886-2-24987733', '新北市萬里區萬里加投18之4號', '25.211000442504883', '121.64800262451172', '6a.jpg', '6b.jpg');
INSERT INTO `scenery` VALUES ('7', '阿湯哥溫泉', '烏來為原住民山區，主要以泰雅族為主，處處可見泰雅族文化圖騰，且以溫泉與山櫻花聞名每逢春天形成落櫻繽紛的燦爛世界，且桶後溪及南勢溪可為旅客消暑，溪中有溪哥魚、苦花魚、溪蝦等。烏來區境內之自然植物、天然瀑布溪流，漫步於情人步道及森林步道中，享受大自然之芬多精，可謂人生一大享受。本館位於烏來溫泉街上，竭誠歡迎各方遠道而來的遊客至本館泡湯休憩。', '886-2-26616307', '新北市烏來區溫泉街75號', '24.860000610351562', '121.5510025024414', '7a.jpg', '7b.jpg');
INSERT INTO `scenery` VALUES ('8', '伊豆商店', '溫泉成分及泉質類別：碳酸氫鹽泉', '886-2-26616620', '新北市烏來區溫泉街72號', '24.86199951171875', '121.55000305175781', '8a.jpg', '8b.jpg');
INSERT INTO `scenery` VALUES ('9', '永和樂華夜市', '有卅年攸久歷史的永和樂華夜市，是雙和地區首屈一指的知名夜市，地處永和區中心交通便捷的永平路，不算長的一條街匯集了上百家的小吃攤及成衣店，入夜之後燈火通明有如白晝，絕對可以同時滿足都市人空乏的胃與寂寥的心。距離永和路入口處不遠左手邊的樂華蚵仔煎算是特色之一，歷經兩代的考驗，第二代三兄妹仍能攜手承接父親衣缽，繼續這個小吃的不朽傳奇。蚵仔煎的特別之處，除了精選新鮮的蚵仔，以細嫩的空心菜取代一般蚵仔煎慣用的茼蒿或小白菜，口感更是一絕。此外，這裡的豬血湯採用特調的沙茶調味，不但鮮而不腥，豬血嫩如豆腐的質感，也令人回味無窮。如果你覺得市面上連鎖經營的鍋貼專賣店已算令你稱道，那你一定沒吃過樂華夜市的鍋貼。店中雖然只賣鍋貼及酸辣湯兩樣東西，卻讓老闆從早忙到晚，每天平均賣出上萬個鍋貼，教店中人手個個人仰馬翻。走進店中只見四個大型生鐵平底鍋一字排開，一次可煎製四百個鍋貼，香味撲鼻，聞香不來也難。', '886-2-29282828', '新北市永和區永平路', '25.010000228881836', '121.50900268554688', '9a.jpg', '9b.jpg');
INSERT INTO `scenery` VALUES ('10', '樹林夜市', '說起樹林夜市的發展源起，得歸功於「有拜有保佑」的地方廟宇─濟安宮。當初因各地慕名到樹林濟安宮朝拜的香客絡繹不絕，才造就了保安街、博愛街、溪北路一帶市集的繁榮。只不過隨著樹林日漸朝向都市型城鎮發展，樹林夜市也轉型為綜合型的夜市，白天當地是現代新穎的商店街當道，到了下午四時以後，小吃攤才開始悄悄地現身，一場令人聞香下馬的喧鬧，一直要持續到午夜十二時灰姑娘的魔法消失為止。與板橋南雅、三重三和或新莊夜市比較起來，樹林夜市的小吃攤不以「量」取勝，花樣及選擇性也不是那麼多，但因有位在樹林火車站旁的地利之便，入夜之後，樹林夜市仍吸引大批晝伏夜出的食客，從四面八方而來，為的不僅僅是填飽肚子，更可感受在人群中呼吸的踏實感。', '886-2-26812106', '新北市樹林區博愛街', '24.98900032043457', '121.42400360107422', '10a.jpg', '10b.jpg');





=================================================
(2)建立網站
=================================================
d:
cd\
express myWeb -ejs        (建立網站框架)
cd myWeb
npm install               (加入網站需要的外掛)
npm install mysql --save  (追加mysql驅動程式外掛)
npm start                 (啟動主機)
=================================================




=================================================
(3)網站架構
=================================================
  |__ app.js
  |
  |__ <routes>
  |      |__ <lib>
  |      |     |__ db.js
  |      |
  |      |__ index.js
  |
  |__ <public>
  |      |__ <images>
  |	       |__ (加入圖片檔)
  |
  |__ <bin>
         |__ www (修改埠號80)
=================================================




=================================================
(3-1)網站 app.js
=================================================
var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');

var index = require('./routes/index');
var users = require('./routes/users');

var app = express();

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

//------------------------------
app.set('json spaces', 4);
//------------------------------

// uncomment after placing your favicon in /public
//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

app.use('/', index);
app.use('/users', users);

// catch 404 and forward to error handler
app.use(function(req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;




=================================================
(3-2)db.js
=================================================
var mysql = require('mysql');

//------------------------
// 建立資料庫連線池
//------------------------
var pool  = mysql.createPool({
    user: 'root',
    password: 'mysql',
    host: '127.0.0.1',
    database: 'mydb', 
    waitForConnections : true, 
    connectionLimit : 10       
});

//----------------------------
// 引用此模組時將匯出pool物件
//----------------------------
module.exports = pool;




=================================================
(3-3)index.js
=================================================
var express = require('express');
var router = express.Router();

//----------------------------------------------------
// 透過require引用db.js的pool物件,
// 即使多個程式均引用, 在系統中只有一份pool物件.
//----------------------------------------------------
var pool = require('./lib/db.js');


//----------------
// GET請求
//----------------
router.get('/', function(req, res, next) {	
    sendData(res);
});

//----------------
// POST請求
//----------------
router.post('/', function(req, res, next) {	
    sendData(res);
});

//--------------------
// 回傳JSON資料
//--------------------
function sendData(res){
    pool.query('select * from scenery', function (error, results, fields) {
        //回傳資料(初值為空陣列)
        var data=[];
		
        if (error){			
            res.send(JSON.stringify(data));
        }else{			
            //逐筆取出資料, 加入data陣列中
            for(var i=0; i<results.length; i++){
                //========================================			
                //取出欄位資料
                //========================================				
                var name=results[i].name;
                var description=results[i].description;	
                var address=results[i].address;	
                var smallPicture=results[i].smallPicture;	
                var largePicture=results[i].largePicture;	
                var latitude=results[i].latitude;	
                var longitude=results[i].longitude;	                                                                						

                //========================================				
                //將資料加入物件中
                //========================================				
                var item={};
                item.name=name;
                item.description=description;
                item.address=address;
                item.smallPicture=smallPicture;
                item.largePicture=largePicture;
                item.latitude=latitude;
                item.longitude=longitude;                                                                
				
                //將存有資料的物件加入陣列
                data.push(item);
            }	
			
            //將陣列轉為JSON格式字串, 回傳給呼叫者
            res.json(data);
        }       
    });
}

module.exports = router;




===============================================================================
(4)瀏覽器加入外掛
===============================================================================
如在Chrome中執行模擬器, 先安裝Chrome Extension: Allow-Control-Allow_Origin
===============================================================================




===============================================================================
(5)建立手機程式
===============================================================================
d:
cd\
ionic start myApp blank   (建立手機程式架構)
cd myApp
ionic g page detail       (追加一個頁面-detail)
ionic g page map          (追加一個頁面-map)
ionic serve -l            (啟動模擬器)
===============================================================================




=================================================
(6)手機程式架構
=================================================
  .
<src> 
  |__ index.html
  |
  |__ <theme>
  |      |__ variables.scss
  |
  |__ <app>
  |      |__ app.module.ts  
  |
  |__ <pages>
         |__ <home>
         |     |__ home.html
         |     |__ home.ts  
         |
         |__ <detail>
         |     |__ detail.html
         |     |__ detail.ts 
         |
         |__ <map>
               |__ map.html
               |__ map.ts   
               |__ map.scss  	       
  
=================================================





=================================================
(6-1)手機 variables.scss
=================================================
$font-path: "../assets/fonts";

@import "ionic.globals";

//--------------------------------
// 宣告使用的顏色
//--------------------------------
$colors: (
    primary:    #550000,
    secondary:  #aa3939,
    danger:     #f53d3d,
    light:      #f4f4f4,
    dark:       #222
);
//--------------------------------

//-----------------------------------
// 更改各項目顏色配置
// ----------------------------------
$text-color:                 #000 !default;
$link-color:                 color($colors, primary) !default;
$background-color:           #fff !default;
$subdued-text-color:         #666 !default;

$font-family-base:           -apple-system, "Helvetica Neue", "Roboto", sans-serif !default;
$font-size-base:             1.4rem !default; // 1.4rem == 14px

$content-padding:            16px !default;
$content-margin:             16px !default;

$toolbar-background:         color($colors, primary) !default;
$toolbar-border-color:       #b2b2b2 !default;
$toolbar-text-color:         $text-color !default;
$toolbar-active-color:       $link-color !default;
$toolbar-inactive-color:     #8c8c8c !default;

$tabs-background:            #f8f8f8 !default;
$tabs-border-color:          #b2b2b2 !default;
$tabs-tab-color-inactive:    #8c8c8c !default;
$tabs-tab-color-active:      $link-color !default;

$list-text-color:            $text-color !default;
$list-background-color:      #ffffff !default;
$list-border-color:          #c8c7cc !default;

@import "ionic.theme.default";
@import "ionic.ionicons";

@import "roboto";
@import "noto-sans";




=================================================
(6-2)手機 app.module.js
=================================================
import { BrowserModule } from '@angular/platform-browser';
import { ErrorHandler, NgModule } from '@angular/core';
import { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';
import { SplashScreen } from '@ionic-native/splash-screen';
import { StatusBar } from '@ionic-native/status-bar';

import { MyApp } from './app.component';
import { HomePage } from '../pages/home/home';
//------------------------------------------------
import { HttpModule } from '@angular/http';
//------------------------------------------------

@NgModule({
  declarations: [
    MyApp,
    HomePage
  ],
  imports: [
    BrowserModule,
    HttpModule,    /* 增加匯入 */
    IonicModule.forRoot(MyApp)
  ],
  bootstrap: [IonicApp],
  entryComponents: [
    MyApp,
    HomePage
  ],
  providers: [
    StatusBar,
    SplashScreen,
    {provide: ErrorHandler, useClass: IonicErrorHandler}
  ]
})
export class AppModule {}




=================================================
(6-3)手機 home.html (修改成自己的網站IP位址)
=================================================
<ion-header>
  <ion-navbar>
    <ion-title>
      景點清單
    </ion-title>
  </ion-navbar>
</ion-header>

<ion-content>
  <!-- ------------------------------------ -->
  <ion-list>
    <ion-item *ngFor='let item of items'>
      <ion-thumbnail item-start>
        <img src="http://120.97.27.***/images/{{smallPicture}}">
      </ion-thumbnail>
      <h2>{{item.name}}</h2>
      <p>{{item.address}}</p>
      <button ion-button clear item-end>詳細</button>
    </ion-item>
  </ion-list>
  <!-- ------------------------------------- -->
</ion-content>




=================================================
(6-4)手機 home.ts (修改成自己的網站IP位址)
=================================================
import { Component } from '@angular/core';
import { NavController } from 'ionic-angular';
//---------------------------------------
import { Http } from '@angular/http';
//---------------------------------------

@Component({
  selector: 'page-home',
  templateUrl: 'home.html'
})
export class HomePage {
  //---------------------------------  
  // 成員
  //---------------------------------  
  items:any;
  //---------------------------------  


  //---------------------------------  
  // 建構元
  //---------------------------------  
  constructor(public navCtrl: NavController, public http:Http) {
      this.http.get('http://120.97.15.192:3000/')			
          .subscribe(response => {
              this.items=response.json();
          });			
  }
  //---------------------------------  


  //---------------------------------  
  // 自訂函式
  //---------------------------------  
  goDetail(){
    this.navCtrl.push('DetailPage');
  }
  //---------------------------------      
}




=================================================
(6-5)手機 detail.html
=================================================
<ion-header>

  <ion-navbar>
    <ion-title>詳細資料</ion-title>
  </ion-navbar>

</ion-header>


<ion-content>
  <!-- ---------------------------- -->
  <ion-card>

    <ion-item>
      <ion-avatar item-start>
        <img src="img/marty-avatar.png">
      </ion-avatar>
      <h2>Marty McFly</h2>
      <p>November 5, 1955</p>
    </ion-item>

    <img src="img/advance-card-bttf.png">

    <ion-card-content>
      <p>out of a DeLorean?! Whoa. This is heavy.</p>
    </ion-card-content>

    <ion-row>      
      <ion-col>
        <button ion-button icon-left clear small (click)='goMap()'>
          <ion-icon name="text"></ion-icon>
          <div>地圖</div>
        </button>
      </ion-col>
    </ion-row>

  </ion-card>
  <!-- ---------------------------- -->
</ion-content>




=================================================
(6-6)手機 detail.ts
=================================================
import { Component } from '@angular/core';
import { IonicPage, NavController, NavParams } from 'ionic-angular';

@IonicPage()
@Component({
  selector: 'page-detail',
  templateUrl: 'detail.html',
})
export class DetailPage {
  //--------------------------
  // 成員
  //--------------------------  
  //--------------------------


  //--------------------------
  // 建構元
  //--------------------------
  constructor(public navCtrl: NavController, public navParams: NavParams) {
  }
  //--------------------------


  //--------------------------
  // 自訂函式
  //--------------------------
  goMap(){
    this.navCtrl.push('MapPage');
  }
  //-------------------------- 
}




=================================================
(6-7)手機 map.html
=================================================
<ion-header>
  <ion-navbar>
    <ion-title>地圖</ion-title>
  </ion-navbar>
</ion-header>

<ion-content>
  <!-- ........................... -->
  <ion-content>
    <div #mapContainer id="map"></div>
  </ion-content>
  <!-- ........................... --> 
</ion-content>




=================================================
(6-7)手機 map.ts
=================================================
import { Component, ViewChild, ElementRef } from '@angular/core';
import { IonicPage, NavController, NavParams } from 'ionic-angular';

declare var google;

@IonicPage()
@Component({
  selector: 'page-map',
  templateUrl: 'map.html',
})
export class MapPage {
  //---------------------------------------------------
  // 成員  
  //---------------------------------------------------
  @ViewChild('mapContainer') mapContainer: ElementRef;
  map: any;

  center:any={
    'lat':25.042375,
    'lng':121.525383,
    'name':'北商大'
  };  
  //---------------------------------------------------
  

  //--------------------------------------------------- 
  // 建構元
  //---------------------------------------------------  
  constructor(public navCtrl: NavController) {}
  //---------------------------------------------------


  //---------------------------------------------------  
  // 畫面完成後執行
  //---------------------------------------------------  
  ionViewWillEnter() {
    this.displayGoogleMap();
    this.addMarkersToMap();
  }
  //---------------------------------------------------
  

  //---------------------------------------------------
  // 顯示地圖
  //--------------------------------------------------- 
  displayGoogleMap() {
    let latLng = new google.maps.LatLng(this.center.lat, this.center.lng);

    let mapOptions = {
      center: latLng,
      disableDefaultUI: true,
      zoom: 17,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    }

    this.map = new google.maps.Map(this.mapContainer.nativeElement, mapOptions);
  }
  //--------------------------------------------------- 
  

  //--------------------------------------------------- 
  // 加入圖釘
  //--------------------------------------------------- 
  addMarkersToMap() {
    var position = new google.maps.LatLng(this.center.lat, this.center.lng);
    var myMarker = new google.maps.Marker({position:position, title:this.center.name});
    
    myMarker.setMap(this.map);    
  }
  //---------------------------------------------------   
}




=================================================
(6-8)手機 map.scss
=================================================
page-map {
  .scroll-content {
    height: 100%
  }

  #map {
    width: 100%;
    height: 100%;
  }
}




=================================================
(6-9)手機 index.html
=================================================
<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
  <meta charset="UTF-8">
  <title>Ionic App</title>
  <meta name="viewport" content="viewport-fit=cover, width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <meta name="format-detection" content="telephone=no">
  <meta name="msapplication-tap-highlight" content="no">

  <link rel="icon" type="image/x-icon" href="assets/icon/favicon.ico">
  <link rel="manifest" href="manifest.json">
  <meta name="theme-color" content="#4e8ef7">

  <!-- add to homescreen for ios -->
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black">

  <!-- cordova.js required for cordova apps (remove if not needed) -->
  <script src="cordova.js"></script>

  <!-- 增加引用 Google Map API -->
  <!-- ...................................................... -->
  <script src="http://maps.google.com/maps/api/js"></script>
  <!-- ...................................................... -->


  <!-- un-comment this code to enable service worker
  <script>
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register('service-worker.js')
        .then(() => console.log('service worker installed'))
        .catch(err => console.error('Error', err));
    }
  </script>-->

  <!-- 增加 -->
  <!-- ....................................... -->
  <script src="build/vendor.js"></script>
  <!-- ....................................... -->

  
  <link href="build/main.css" rel="stylesheet">

</head>
<body>

  <!-- Ionic's root component and where the app will load -->
  <ion-app></ion-app>

  <!-- The polyfills js is generated during the build process -->
  <script src="build/polyfills.js"></script>

  <!-- The vendor js is generated during the build process
       It contains all of the dependencies in node_modules -->
  <script src="build/vendor.js"></script>

  <!-- The main bundle js is generated during the build process -->
  <script src="build/main.js"></script>

</body>
</html>
